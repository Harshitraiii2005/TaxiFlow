name: CI/CD for Astro Airflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-run:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repository
      - name: Checkout repo
        uses: actions/checkout@v3

      # 2️⃣ Install Docker (official way, avoids containerd conflicts)
      - name: Install Docker
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh
          sudo usermod -aG docker $USER
          docker --version

      # 3️⃣ Install Astro CLI
      - name: Install Astro CLI
        run: |
          curl -sSL https://install.astronomer.io | sudo bash
          astro version

      # 4️⃣ Initialize Astro project (if Dockerfile not present)
      - name: Initialize Astro project
        run: |
          if [ ! -f "Dockerfile" ]; then
            astro dev init
          fi

      # 5️⃣ Build Docker image
      - name: Build Docker image
        run: |
          astro dev build
          # Tag the built image
          IMAGE_NAME=$(docker images --format "{{.Repository}}:{{.Tag}}" | grep airflow | head -n1)
          docker tag $IMAGE_NAME my-astro-airflow:latest

      # 6️⃣ Run Docker container
      - name: Run Docker container
        run: |
          docker run -d --name astro-container -p 8080:8080 my-astro-airflow:latest
          echo "Waiting for container to be healthy..."
          for i in {1..30}; do
            if [ "$(docker inspect -f '{{.State.Health.Status}}' astro-container 2>/dev/null)" == "healthy" ]; then
              echo "✅ Container is healthy"
              break
            else
              echo "Waiting..."
              sleep 5
            fi
          done

      # 7️⃣ Verify container is running
      - name: Verify container running
        run: |
          docker ps | grep astro-container || (echo "❌ Container not running" && exit 1)

      # 8️⃣ Optional cleanup
      - name: Cleanup Docker container
        if: always()
        run: |
          docker stop astro-container || true
          docker rm astro-container || true
